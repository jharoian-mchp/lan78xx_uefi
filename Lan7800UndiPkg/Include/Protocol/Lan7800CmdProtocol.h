/*

    Copyright (C) 2009 - 2020. Microchip Technology Inc. and its 
            subsidiaries (Microchip).  All rights reserved.

    You are permitted to use the software and its derivatives with Microchip 
    products. See the license agreement accompanying this software, if any, 
    for additional info regarding your rights and obligations.

    SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY 
    WARRANTY OF MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A 
    PARTICULAR PURPOSE. IN NO EVENT SHALL MICROCHIP, SMSC, OR ITS LICENSORS 
    BE LIABLE OR OBLIGATED UNDER CONTRACT, NEGLIGENCE, STRICT LIABILITY, 
    CONTRIBUTION, BREACH OF WARRANTY, OR OTHER LEGAL EQUITABLE THEORY FOR 
    ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES INCLUDING BUT NOT LIMITED TO 
    ANY INCIDENTAL, SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES, OR OTHER 
    SIMILAR COSTS. TO THE FULLEST EXTENT ALLOWED BY LAW, MICROCHIP AND ITS 
    LICENSORS LIABILITY WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY, THAT YOU 
    PAID DIRECTLY TO MICROCHIP TO USE THIS SOFTWARE. MICROCHIP PROVIDES THIS 
    SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF THESE TERMS.  
*/


#ifndef _LAN7800_CMD_PROTOCOL_
#define _LAN7800_CMD_PROTOCOL_

#define SPEED_0				0xffff
#define SPEED_10			10
#define SPEED_100			100
#define SPEED_1000			1000
#define HALF_DUPLEX			1
#define FULL_DUPLEX			2

// Lan7800 Device cmd Protocol Guid
//{b80d8a43-f58d-44ec-992c-fe7eeccdf4f9}
#define LAN7800_DEVICE_CMD_PROTOCOL_GUID \
	{ \
		0xb80d8a43, 0xf58d, 0x44ec, { 0x99, 0x2c, 0xfe, 0x7e, 0xec, 0xcd, 0xf4, 0xf9 } \
	}

// CR Macro
#define LAN7800_ADAPTER_DATA_FROM_DEVICE_CMD_OPS(a) \
  CR(a, LAN7800_ADAPTER_DATA, DeviceCmdOps, LAN7800_ADAPTER_SIGNATURE)

typedef struct _LAN7800_DEVICE_CMD_PROTOCOL LAN7800_DEVICE_CMD_PROTOCOL;

// Device command Protocol Interface Prototype
typedef CHAR16 *(EFIAPI *EFI_LAN7800_DEVICE_GET_NAME) (
	IN LAN7800_DEVICE_CMD_PROTOCOL *This
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_GET_MAC_ADDRESS) (
	IN LAN7800_DEVICE_CMD_PROTOCOL	*This,
	OUT EFI_MAC_ADDRESS				*MacAddress
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_GET_EEPROM_LENGTH) (
	IN LAN7800_DEVICE_CMD_PROTOCOL	*This,
	OUT UINT32						*Length
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_READ_EEPROM) (
	IN	LAN7800_DEVICE_CMD_PROTOCOL	*This,
	IN	UINTN						Offset,
	IN	UINTN						DataLength,
	OUT	UINT8						*Data
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_WRITE_EEPROM) (
	IN	LAN7800_DEVICE_CMD_PROTOCOL	*This,
	IN	UINTN						Offset,
	IN	UINTN						DataLength,
	OUT	UINT8						*Data
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_READ_PHY) (
	IN LAN7800_DEVICE_CMD_PROTOCOL	*This,
	IN UINT8						PhyId,
	IN UINT32						Index,
	OUT UINT32						*Data
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_WRITE_PHY) (
	IN LAN7800_DEVICE_CMD_PROTOCOL	*This,
	IN UINT8						PhyId,
	IN UINT32						Index,
	OUT UINT32						Data
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_READ_REGISTER) (
	IN LAN7800_DEVICE_CMD_PROTOCOL	*This,
	IN UINT16						Index,
	OUT UINT32						*Data
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_WRITE_REGISTER) (
	IN LAN7800_DEVICE_CMD_PROTOCOL	*This,
	IN UINT16						Index,
	OUT UINT32						Data
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_DUMP_OTP) (
	IN	LAN7800_DEVICE_CMD_PROTOCOL	*This,
	IN	UINTN						Offset,
	IN	UINTN						DataLength,
	OUT	UINT8						*Data
	);
typedef EFI_STATUS (EFIAPI *EFI_LAN7800_DEVICE_GET_LINK_STATUS) (
	IN	LAN7800_DEVICE_CMD_PROTOCOL	*This,
	OUT	UINT32						*LinkSpeed,
	OUT	UINT32						*Duplex
	);

extern EFI_GUID gLan7800DeviceCmdProtocolGuid;

typedef struct _LAN7800_DEVICE_CMD_PROTOCOL {
	EFI_LAN7800_DEVICE_GET_NAME				GetDeviceName;
	EFI_LAN7800_DEVICE_GET_MAC_ADDRESS		GetMacAddress;
	EFI_LAN7800_DEVICE_GET_EEPROM_LENGTH	GetEepromLength;
	EFI_LAN7800_DEVICE_READ_EEPROM			ReadEeprom;
	EFI_LAN7800_DEVICE_WRITE_EEPROM			WriteEeprom;
	EFI_LAN7800_DEVICE_READ_PHY				ReadPhy;
	EFI_LAN7800_DEVICE_WRITE_PHY			WritePhy;
	EFI_LAN7800_DEVICE_READ_REGISTER		ReadRegister;
	EFI_LAN7800_DEVICE_WRITE_REGISTER		WriteRegister;
	EFI_LAN7800_DEVICE_DUMP_OTP				DumpOtp;
	EFI_LAN7800_DEVICE_GET_LINK_STATUS		GetLinkStatus;
} LAN7800_DEVICE_CMD_PROTOCOL;

#endif /* _LAN7800_CMD_PROTOCOL_ */